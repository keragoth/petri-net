/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testowa;

import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.xml.bind.JAXBException;
import static testowa.Rysunek.c_linie;
import static testowa.Rysunek.c_punkty;
import static testowa.Rysunek.linie;
import static testowa.Rysunek.punkty;

/**
 *
 * @author Grzegorz
 */
public class GUI extends javax.swing.JFrame implements KeyListener {

    /**
     * Creates new form GUI
     */
    private List<Figura> miejsca;
    private List<Figura> tranzycje;
    private List<String[]> lines;
    PrintWriter zapis;
    static Symulacja sym;
    Dimension rozmiar;

    public GUI() throws FileNotFoundException {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton5 = new javax.swing.JToggleButton();
        jToolBar1 = new javax.swing.JToolBar();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        rysunek1 = new testowa.Rysunek();
        addKeyListener(this);
        jMenuBar1 = new javax.swing.JMenuBar();
        setLayout(null);
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();

        jToggleButton5.setText("jToggleButton5");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Symulator czasowych sieci Petriego");
        setMinimumSize(new java.awt.Dimension(150, 165));
        setPreferredSize(new java.awt.Dimension(350, 365));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setMaximumSize(new java.awt.Dimension(1600, 25));
        jToolBar1.setMinimumSize(new java.awt.Dimension(80, 25));
        jToolBar1.setPreferredSize(new java.awt.Dimension(80, 25));

        //jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ikony/test.png")));

        jToggleButton1.setBorderPainted(false);
        jToggleButton1.setToolTipText("Miejsce");
        Dimension dB1 = new Dimension(25,25);
        jToggleButton1.setMaximumSize(dB1);
        jToggleButton1.setText("Miejsce");
        jToggleButton1.setFocusable(false);
        jToggleButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton1);

        jToggleButton3.setText("Tranzycja");
        jToggleButton1.setBorderPainted(false);
        jToggleButton1.setToolTipText("Tranzycja");
        Dimension dB2 = new Dimension(25,50);
        jToggleButton1.setMaximumSize(dB2);
        jToggleButton3.setFocusable(false);
        jToggleButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton3);

        jToggleButton2.setText("Krawędź");
        jToggleButton2.setFocusable(false);
        jToggleButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton2);

        jToggleButton4.setSelected(true);
        jToggleButton4.setText("Wybór");
        jToggleButton4.setFocusable(false);
        jToggleButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton4);

        jButton1.setText("Symulacja");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        getContentPane().add(jToolBar1);

        jPanel1.setMaximumSize(new java.awt.Dimension(62767, 62767));

        javax.swing.GroupLayout rysunek1Layout = new javax.swing.GroupLayout(rysunek1);
        rysunek1.setLayout(rysunek1Layout);
        rysunek1Layout.setHorizontalGroup(
            rysunek1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        rysunek1Layout.setVerticalGroup(
            rysunek1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 254, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rysunek1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rysunek1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        rysunek1.getAccessibleContext().setAccessibleName("");

        getContentPane().add(jPanel1);

        jMenu1.setText("Plik");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Nowy");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Otwórz");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Zapisz");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Koniec");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edycja");

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, 0));
        jMenuItem5.setText("Miejsce");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, 0));
        jMenuItem6.setText("Tranzycja");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, 0));
        jMenuItem7.setText("Krawędź");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, 0));
        jMenuItem10.setText("Wybór");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem10);

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, 0));
        jMenuItem11.setText("Symulacja");
        jMenu2.add(jMenuItem11);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Widok");

        jCheckBoxMenuItem1.setText("Pokaż ID");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItem1);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        //miejsce
        jToggleButton3.setSelected(false);
        jToggleButton2.setSelected(false);
        jToggleButton4.setSelected(false);

        if (Ustawienia.USTAWIENIE != Ustawienia.MIEJSCE) {
            Ustawienia.USTAWIENIE = Ustawienia.MIEJSCE;
        } else {
            Ustawienia.USTAWIENIE = Ustawienia.NORMAL;
            kursor();
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here:
        jToggleButton1.setSelected(false);
        jToggleButton2.setSelected(false);
        jToggleButton4.setSelected(false);

        if (Ustawienia.USTAWIENIE != Ustawienia.TRANZYCJA) {
            Ustawienia.USTAWIENIE = Ustawienia.TRANZYCJA;
        } else {
            Ustawienia.USTAWIENIE = Ustawienia.NORMAL;
            kursor();
        }

    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        NewModel();
        try {
            // TODO add your handling code here:
            //otworz
            Otworz tmp = new Otworz();

            //this.enable(false);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JAXBException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
        jToggleButton1.setSelected(false);
        jToggleButton3.setSelected(false);
        jToggleButton4.setSelected(false);

        if (Ustawienia.USTAWIENIE != Ustawienia.LINIA) {
            Ustawienia.USTAWIENIE = Ustawienia.LINIA;
        } else {
            Ustawienia.USTAWIENIE = Ustawienia.NORMAL;
            kursor();
        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        // TODO add your handling code here:
        jToggleButton4.setSelected(true);
        kursor();
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //symulacja
        if (Ustawienia.symulacja == 0) {
            //obliczenie czasu symulacji

            //==================================
            Ustawienia.czas = 0;
            sym = null;
            miejsca = new ArrayList<Figura>();
            tranzycje = new ArrayList<Figura>();
            lines = new ArrayList<String[]>();
            Iterator ite = punkty.entrySet().iterator();
            String places = "   ";
            String tranzitions = "   ";
            Ustawienia.symulacja = 1;
            //towrzymy wektory miejsc i tranzycji
            while (ite.hasNext()) {
                Map.Entry thisEntry = (Map.Entry) ite.next();
                Object key = thisEntry.getKey();
                if (punkty.get(key).TypFig() == 1) {
                    miejsca.add(punkty.get(key));
                    places += " " + punkty.get(key).getID();
                } else if (punkty.get(key).TypFig() == 2) {
                    tranzycje.add(punkty.get(key));
                    tranzitions += " " + punkty.get(key).getID();
                }
            }

            try {
                zapis = new PrintWriter("macierz.txt");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }

            zapis.println("wektor miejsc: " + places);
            zapis.println("wektor tranzycji: " + tranzitions);
            zapis.println();

            zapis.println(places);
            int roz = miejsca.size();
            //wektor linii
            Iterator iter = linie.entrySet().iterator();
            Integer tmp[];
            while (iter.hasNext()) {
                Map.Entry thisEntry = (Map.Entry) iter.next();
                Object key = thisEntry.getKey();
                if (linie.get(key).Typ() == 1) {
                    tmp = null;
                    tmp = linie.get(key).Wypisz();
                    String[] str = new String[2];
                    str[0] = punkty.get(tmp[0]).getID();
                    str[1] = punkty.get(tmp[1]).getID();
                    lines.add(str);
                    str = null;
                    str = lines.get(lines.size() - 1);
                    //  System.out.println(str[0] + " " + str[1]);
                }

            }
            /*    System.out.println("linies "); //drukuje obiekty wszystkich linii 
             for (int l = 0; l < lines.size(); l++) {
             System.out.println(lines.get(l)[0] + " " + lines.get(l)[1]);
             }*/

            //tworzymy macierz incydencji
            for (int i = 0; i < tranzycje.size(); i++) {
                String output = "";

                String idt = tranzycje.get(i).getID(); //id tranzycji t0..tn
                // System.out.println(idt);
                for (int p = 0; p < miejsca.size(); p++) {
                    int stan = 0;
                    String idm = miejsca.get(p).getID(); //id miejsca p0..pn
                    //   System.out.println(idm);
                    for (int j = 0; j < lines.size(); j++) {
                        if ((lines.get(j)[0] == idt) && (lines.get(j)[1] == idm)) {
                            stan = -1;
                            break;
                        } else if ((lines.get(j)[1] == idt) && (lines.get(j)[0] == idm)) {
                            stan = 1;
                            break;
                        }

                    }
                    if (stan != 0) {
                        output += "  " + Integer.toString(stan);
                    } else {
                        output += "  0";
                    }
                }
                //  System.out.println("out: " + output);
                zapis.println(idt + output);
            }

            zapis.close();
            sym = new Symulacja(Rysunek.punkty, Rysunek.linie);
            sym.setSize(this.getWidth() + 20, this.getHeight() + 20);
            sym.show();
            sym.setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        //nowy model
        NewModel();

    }//GEN-LAST:event_jMenuItem1ActionPerformed
    private void NewModel() {
        jPanel1.removeAll();
        rysunek1.removeAll();
        Rysunek.punkty.clear();
        Rysunek.linie.clear();
        Ustawienia.it = 0;
        Ustawienia.im = 0;

        //Rysunek.c_linie.clear();
        //Rysunek.c_punkty.clear();
        //   System.out.println("rnew");
        rysunek1 = new Rysunek();
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(rysunek1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(rysunek1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1);
    }

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
            // TODO add your handling code here:
            //zapis
            Zapis tmp = new Zapis(super.getSize());
            // tmp.show();
            // tmp.setLocationRelativeTo(null);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JAXBException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        //miejsce 
        jToggleButton1.setSelected(true);
        jToggleButton1ActionPerformed(null);

    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        //tranzycja
        jToggleButton3.setSelected(true);
        jToggleButton3ActionPerformed(null);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        //linia
        jToggleButton2.setSelected(true);
        jToggleButton2ActionPerformed(null);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        //kursor
        jToggleButton4.setSelected(true);
        jToggleButton4ActionPerformed(null);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        // TODO add your handling code here:
        if (Ustawienia.showID == 0) {
            Ustawienia.showID = 1;
        } else {
            Ustawienia.showID = 0;
        }
        Rysunek.refresh();

    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed
    public void off() {
        if (Ustawienia.blocked == 1) {
            this.enable(false);
        }
        if (Ustawienia.blocked == 0) {
            this.enable(true);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GUI().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    public static javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToolBar jToolBar1;
    public static testowa.Rysunek rysunek1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent ke) {
        //  System.out.println("Typed");
    }

    @Override
    public void keyPressed(KeyEvent ke) {
        //  System.out.println("Pressed");
        Ustawienia.KEY = ke.getKeyCode();
        if (ke.getKeyCode() == 27) { //esc key  
            /*    jToggleButton1.setSelected(false);
             jToggleButton3.setSelected(false);
             jToggleButton2.setSelected(false);
             Ustawienia.USTAWIENIE = Ustawienia.NORMAL;
             */
            kursor();
        }
        //System.out.println("kode " +ke.getKeyCode());
    }

    @Override
    public void keyReleased(KeyEvent ke) {
        //  System.out.println("Released");
        Ustawienia.KEY = 0;
    }

    private void kursor() {
        jToggleButton1.setSelected(false);
        jToggleButton3.setSelected(false);
        jToggleButton2.setSelected(false);

        jToggleButton4.setSelected(true);
        Ustawienia.USTAWIENIE = Ustawienia.NORMAL;

    }

    public static void czas_symu() {
        int index = 0;
        int licznik = 0;
        int size = punkty.size();
        // <editor-fold defaultstate="collapsed" desc="sym">
        while (index < size) {
            if (punkty.get(index).TypFig() == 2) {
                licznik = licznik + punkty.get(index).getST();
            }
            index++;
        }
        //</editor-fold>
        //  System.out.println(licznik);
        if (licznik == 0) {
            licznik = 1;
        }
        Ustawienia.czas_symulacji = licznik * 3;
    }
}
