/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testowa;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import org.jfree.ui.RefineryUtilities;
import static testowa.GUI.sym;
import static testowa.Rysunek.c_punkty;
import static testowa.Rysunek.getDeepCopy;
import static testowa.Rysunek.punkty;
//import static testowa.ZapisSymulacji.figury;

/**
 *
 * @author Grzegorz
 */
public class Symulacja extends javax.swing.JFrame {

    GanttDemo2 demo;
    public static HashMap<Integer, ZapisSymulacji> h_sym;
    public static HashMap<Integer, Historia> his;
    Thread t1;

    /**
     * Creates new form Symulacja
     */
    public Symulacja(HashMap<Integer, Figura> p, HashMap<Integer, Linie> l) {
        initComponents(p, l);
        Ustawienia.showID = 1;
        //   this.thread1 = new Thread();

        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                Ustawienia.symulacja = 0;
                Rysunek.c_linie.clear();
                Rysunek.c_punkty.clear();
                sym.dispose();
                sym = null;
                Zakoncz();
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents(HashMap<Integer, Figura> p, HashMap<Integer, Linie> l) {
        /*
         jToolBar1 = new javax.swing.JToolBar();
         jToggleButton1 = new javax.swing.JToggleButton();
         jButton1 = new javax.swing.JButton();
         jButton2 = new javax.swing.JButton();
         jButton3 = new javax.swing.JButton();
         jPanel1 = new javax.swing.JPanel();
         rysunek1 = new testowa.Rysunek(p, l);
         jTextField1 = new javax.swing.JTextField();
         jLabel1 = new javax.swing.JLabel();
         jMenuBar2 = new javax.swing.JMenuBar();
         jMenu3 = new javax.swing.JMenu();
         jMenu4 = new javax.swing.JMenu();
         */
        jToolBar1 = new javax.swing.JToolBar();
        jButton7 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        rysunek1 = new testowa.Rysunek(p, l);
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem4 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem5 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem6 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem7 = new javax.swing.JRadioButtonMenuItem();

        // setDefaultCloseOperation(Zakoncz());
        setMinimumSize(new java.awt.Dimension(300, 250));

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton7.setText("Start");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jRadioButtonMenuItem1.setSelected(false);
        jRadioButtonMenuItem1.setText("0 ms");
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem1);

        jRadioButtonMenuItem2.setSelected(false);
        jRadioButtonMenuItem2.setText("10 ms");
        jRadioButtonMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem2);

        jRadioButtonMenuItem3.setSelected(false);
        jRadioButtonMenuItem3.setText("50 ms");
        jRadioButtonMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem3);

        jRadioButtonMenuItem4.setSelected(true);
        jRadioButtonMenuItem4.setText("100 ms");
        jRadioButtonMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem4);

        jRadioButtonMenuItem5.setSelected(false);
        jRadioButtonMenuItem5.setText("200 ms");
        jRadioButtonMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem5);

        jRadioButtonMenuItem6.setSelected(false);
        jRadioButtonMenuItem6.setText("500 ms");
        jRadioButtonMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem6ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem6);

        jRadioButtonMenuItem7.setSelected(false);
        jRadioButtonMenuItem7.setText("1 s");
        jRadioButtonMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem7ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem7);

        jButton1.setText("Kontynuuj");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton3.setText("PoczÄ…tek");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton4.setText("-1");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton5.setText("+1");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jButton6.setText("Koniec");
        jButton6.setFocusable(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);
        jToolBar1.add(jSeparator1);

        jButton2.setText("+1");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        javax.swing.GroupLayout rysunek1Layout = new javax.swing.GroupLayout(rysunek1);
        rysunek1.setLayout(rysunek1Layout);
        rysunek1Layout.setHorizontalGroup(
                rysunek1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 0, Short.MAX_VALUE)
        );
        rysunek1Layout.setVerticalGroup(
                rysunek1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 395, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(rysunek1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(rysunek1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        rysunek1.getAccessibleContext().setAccessibleDescription("");

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField1.setText("0");

        jLabel1.setText("CZAS");

        jMenu3.setText("File");

        jMenuItem1.setText("Wykres Gantta");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(266, 266, 266))
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton7 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        rysunek1 = new testowa.Rysunek();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem4 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem5 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem6 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem7 = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(200, 200));

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton7.setText("Start");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jButton1.setText("Kontynuuj");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton3.setText("PoczÄ…tek");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton4.setText("-1");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton5.setText("+1");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jButton6.setText("Koniec");
        jButton6.setFocusable(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);
        jToolBar1.add(jSeparator1);

        jButton2.setText("+1");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        javax.swing.GroupLayout rysunek1Layout = new javax.swing.GroupLayout(rysunek1);
        rysunek1.setLayout(rysunek1Layout);
        rysunek1Layout.setHorizontalGroup(
            rysunek1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        rysunek1Layout.setVerticalGroup(
            rysunek1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 395, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rysunek1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rysunek1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        rysunek1.getAccessibleContext().setAccessibleDescription("");

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField1.setText("0");

        jLabel1.setText("CZAS");

        jMenu3.setText("File");

        jMenuItem1.setText("Wykres Gantta");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("0 ms");
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem1);

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("10 ms");
        jRadioButtonMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem2);

        jRadioButtonMenuItem3.setSelected(true);
        jRadioButtonMenuItem3.setText("50 ms");
        jRadioButtonMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem3);

        jRadioButtonMenuItem4.setSelected(true);
        jRadioButtonMenuItem4.setText("100 ms");
        jRadioButtonMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem4);

        jRadioButtonMenuItem5.setSelected(true);
        jRadioButtonMenuItem5.setText("200 ms");
        jRadioButtonMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem5);

        jRadioButtonMenuItem6.setSelected(true);
        jRadioButtonMenuItem6.setText("500 ms");
        jRadioButtonMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem6ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem6);

        jRadioButtonMenuItem7.setSelected(true);
        jRadioButtonMenuItem7.setText("1 s");
        jRadioButtonMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem7ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem7);

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(266, 266, 266))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //  System.out.println("klik");
//procedura
        Ustawienia.czas_symulacji = Ustawienia.czas + 1;
        czasowa();


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:

        if (this.jButton7.getText() == "Start") {
            t1 = new Thread(new Watek());
            t1.start();
            this.jButton1.setEnabled(true);
            this.jButton1.setText("Pause");
        }

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Ustawienia.czas = 0;
        Rysunek.c_punkty = Rysunek.getDeepCopy(h_sym.get(0).fig());
        Ustawienia.krok = 0;

        jTextField1.setText(Integer.toString(Ustawienia.czas));
        Rysunek.refresh();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (Ustawienia.krok + 1 <= Ustawienia.max_krok) {
            Ustawienia.krok++;
            Rysunek.c_punkty = Rysunek.getDeepCopy(h_sym.get(Ustawienia.krok).fig());
            Ustawienia.czas = h_sym.get(Ustawienia.krok).czas();
            jTextField1.setText(Integer.toString(Ustawienia.czas));
            Rysunek.refresh();
        }
        // System.out.println("krok " + Ustawienia.krok);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (Ustawienia.krok - 1 >= 0) {
            Ustawienia.krok--;
            Rysunek.c_punkty = Rysunek.getDeepCopy(h_sym.get(Ustawienia.krok).fig());
            Ustawienia.czas = h_sym.get(Ustawienia.krok).czas();
            jTextField1.setText(Integer.toString(Ustawienia.czas));
            Rysunek.refresh();
        }
        //  System.out.println("krok " + Ustawienia.krok);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        Ustawienia.krok = Ustawienia.max_krok - 1;
        Rysunek.c_punkty = Rysunek.getDeepCopy(h_sym.get(Ustawienia.krok).fig());
        Ustawienia.czas = h_sym.get(Ustawienia.krok).czas();
        jTextField1.setText(Integer.toString(Ustawienia.czas));
        Rysunek.refresh();

    }//GEN-LAST:event_jButton6ActionPerformed
//wykres gantta
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        // System.out.println("gen");
        t1.stop();

        generujWykres();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (this.jButton1.getText() == "Pause") {
            t1.suspend();
            this.jButton1.setText("Kontynuuj");
        } else if (this.jButton1.getText() == "Kontynuuj") {
            t1.resume();
            this.jButton1.setText("Pause");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButtonMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem2ActionPerformed
        // TODO add your handling code here:
        //czas 10 ms
        this.jRadioButtonMenuItem1.setSelected(false);
        this.jRadioButtonMenuItem2.setSelected(true);
        this.jRadioButtonMenuItem3.setSelected(false);
        this.jRadioButtonMenuItem4.setSelected(false);
        this.jRadioButtonMenuItem5.setSelected(false);
        this.jRadioButtonMenuItem6.setSelected(false);
        this.jRadioButtonMenuItem7.setSelected(false);
        Ustawienia.MS = 10;
    }//GEN-LAST:event_jRadioButtonMenuItem2ActionPerformed

    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed
        // TODO add your handling code here:
        //czas 0 ms
        this.jRadioButtonMenuItem1.setSelected(true);
        this.jRadioButtonMenuItem2.setSelected(false);
        this.jRadioButtonMenuItem3.setSelected(false);
        this.jRadioButtonMenuItem4.setSelected(false);
        this.jRadioButtonMenuItem5.setSelected(false);
        this.jRadioButtonMenuItem6.setSelected(false);
        this.jRadioButtonMenuItem7.setSelected(false);

        Ustawienia.MS = 0;
    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    private void jRadioButtonMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem3ActionPerformed
        // TODO add your handling code here:
        //czas 50 ms
        this.jRadioButtonMenuItem1.setSelected(false);
        this.jRadioButtonMenuItem2.setSelected(false);
        this.jRadioButtonMenuItem3.setSelected(true);
        this.jRadioButtonMenuItem4.setSelected(false);
        this.jRadioButtonMenuItem5.setSelected(false);
        this.jRadioButtonMenuItem6.setSelected(false);
        this.jRadioButtonMenuItem7.setSelected(false);
        Ustawienia.MS = 50;
    }//GEN-LAST:event_jRadioButtonMenuItem3ActionPerformed

    private void jRadioButtonMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem4ActionPerformed
        // TODO add your handling code here:
        //czas 100 ms
        this.jRadioButtonMenuItem1.setSelected(false);
        this.jRadioButtonMenuItem2.setSelected(false);
        this.jRadioButtonMenuItem3.setSelected(false);
        this.jRadioButtonMenuItem4.setSelected(true);
        this.jRadioButtonMenuItem5.setSelected(false);
        this.jRadioButtonMenuItem6.setSelected(false);
        this.jRadioButtonMenuItem7.setSelected(false);
        Ustawienia.MS = 100;
    }//GEN-LAST:event_jRadioButtonMenuItem4ActionPerformed

    private void jRadioButtonMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem5ActionPerformed
        // TODO add your handling code here:
        // czas 200 ms
        this.jRadioButtonMenuItem1.setSelected(false);
        this.jRadioButtonMenuItem2.setSelected(false);
        this.jRadioButtonMenuItem3.setSelected(false);
        this.jRadioButtonMenuItem4.setSelected(false);
        this.jRadioButtonMenuItem5.setSelected(true);
        this.jRadioButtonMenuItem6.setSelected(false);
        this.jRadioButtonMenuItem7.setSelected(false);
        Ustawienia.MS = 200;
    }//GEN-LAST:event_jRadioButtonMenuItem5ActionPerformed

    private void jRadioButtonMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem6ActionPerformed
        // TODO add your handling code here:
        //czas 500 ms
        this.jRadioButtonMenuItem1.setSelected(false);
        this.jRadioButtonMenuItem2.setSelected(false);
        this.jRadioButtonMenuItem3.setSelected(false);
        this.jRadioButtonMenuItem4.setSelected(false);
        this.jRadioButtonMenuItem5.setSelected(false);
        this.jRadioButtonMenuItem6.setSelected(true);
        this.jRadioButtonMenuItem7.setSelected(false);
        Ustawienia.MS = 500;
    }//GEN-LAST:event_jRadioButtonMenuItem6ActionPerformed

    private void jRadioButtonMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem7ActionPerformed
        // TODO add your handling code here:
        //czas 1s
        this.jRadioButtonMenuItem1.setSelected(false);
        this.jRadioButtonMenuItem2.setSelected(false);
        this.jRadioButtonMenuItem3.setSelected(false);
        this.jRadioButtonMenuItem4.setSelected(false);
        this.jRadioButtonMenuItem5.setSelected(false);
        this.jRadioButtonMenuItem6.setSelected(false);
        this.jRadioButtonMenuItem7.setSelected(true);
        Ustawienia.MS = 1000;
    }//GEN-LAST:event_jRadioButtonMenuItem7ActionPerformed

    public static void pczas() {

        Ustawienia.czas++;

        jTextField1.setText(Integer.toString(Ustawienia.czas));

    }

    /**
     * @param args the command line arguments
     */
    public static void main(final HashMap<Integer, Figura> p, final HashMap<Integer, Linie> l) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Symulacja.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Symulacja.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Symulacja.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Symulacja.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Symulacja(p, l).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem4;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem5;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem6;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem7;
    private javax.swing.JToolBar.Separator jSeparator1;
    private static javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    private testowa.Rysunek rysunek1;
    // End of variables declaration//GEN-END:variables

    private void czasowa() {
        Ustawienia.blokada = 0;
        int index = 0;
        int size = c_punkty.size();
        while (index < size) {

            if (c_punkty.get(index).TypFig() == 2) {
                if (c_punkty.get(index).blok() == 1) {
                    Ustawienia.blokada = 1;
                    //   System.out.println("blok "+c_punkty.get(index).getID());
                    break;
                }

            }
            index++;
        }

        if (Ustawienia.blokada == 0) {
            //      System.out.println("brak blokady");
            //    System.out.println("czas ++");
            pczas();
            //Ustawienia.czas_symulacji++;
            Rysunek.checkStatus(-1);
        } else {
            //    System.out.println("jest blokady");
            //   Rysunek.checkStatus(-1);
        }
    }

    private void generujWykres() {

        int index = 0;
        Ustawienia.ilosc_tranzycji = 0;
        while (index < c_punkty.size()) {
            if (c_punkty.get(index).TypFig() == 2) {
                Ustawienia.ilosc_tranzycji++;
            }
            index++;
        }
        System.out.println("generate");

        demo = new GanttDemo2("Wykres Gantta", his);
        demo.setExtendedState(JFrame.MAXIMIZED_BOTH);
        demo.pack();
        RefineryUtilities.centerFrameOnScreen(demo);
        demo.setVisible(true);

    }

    public static HashMap<Integer, Historia> getDeepCopy(HashMap<Integer, Historia> source) {
        HashMap<Integer, Historia> copy = new HashMap<Integer, Historia>();
        for (Map.Entry<Integer, Historia> entry : source.entrySet()) {
            try {
                copy.put(entry.getKey(), entry.getValue().clone());
            } catch (CloneNotSupportedException ex) {
                Logger.getLogger(Rysunek.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return copy;
    }

    private void Zakoncz() {

        t1.stop();
        if (t1.isAlive() == false) {
            t1.stop();
        }
        t1 = null;
        this.dispose();
    }

    public class Watek implements Runnable {

        @Override
        public void run() {
            GUI.czas_symu();
            his = new HashMap<Integer, Historia>();
            Ustawienia.krok = 0;
            Ustawienia.max_krok = 0;
            Ustawienia.czas = 0;
            c_punkty = Rysunek.getDeepCopy(punkty);
            Rysunek.checkStatus(1);
            h_sym = new HashMap<Integer, ZapisSymulacji>();
            //  System.out.println("czas symulacji " + Ustawienia.czas_symulacji);
            //Ustawienia.czas_symulacji = 6;
            int krok = 0;
            int ind_h = 0;
            HashMap<Integer, Figura> temp;
            ZapisSymulacji zs;
            temp = new HashMap<Integer, Figura>();
            temp = Rysunek.getDeepCopy(c_punkty);
            zs = new ZapisSymulacji(0, temp);
            h_sym.put(krok, zs);
            krok++;
            for (int czas = 0; czas < Ustawienia.czas + 1; czas = Ustawienia.czas) {

                int size = c_punkty.size();
                // <editor-fold defaultstate="collapsed" desc="sym">
                //System.out.println();
                int index = 0;
                if (Ustawienia.blokada == 1) {
                    while (index < size) {
                        if (c_punkty.get(index).TypFig() == 2) {
                            if (c_punkty.get(index).getStatus() == 1) {
                                //System.out.println("before process");
                                Rysunek.process(index);
                                int t1 = c_punkty.get(index).getST();
                                Historia addHist = new Historia(c_punkty.get(index).getID(), czas - t1, czas);
                                his.put(ind_h, addHist);
                                ind_h++;
                                //dodanie do historii
                                HashMap<Integer, Figura> temp1 = new HashMap<Integer, Figura>();
                                temp1 = Rysunek.getDeepCopy(c_punkty);
                                ZapisSymulacji zs1 = new ZapisSymulacji(czas, temp1);
                                h_sym.put(krok, zs1);
                                krok++;
                                try {

                                    Rysunek.refresh();
                                    Thread.sleep(Ustawienia.MS);
                                } catch (InterruptedException ex) {
                                    Logger.getLogger(Symulacja.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                break;
                                //System.out.println("after process");
                            } else {

                            }
                        }

                        index++;

                    }
                } else {

                }
                try {
                    Rysunek.refresh();
                    Thread.sleep(Ustawienia.MS);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Symulacja.class.getName()).log(Level.SEVERE, null, ex);
                }
                czasowa();
                Ustawienia.max_krok = krok;
                try {
                    Rysunek.refresh();
                    Thread.sleep(Ustawienia.MS);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Symulacja.class.getName()).log(Level.SEVERE, null, ex);
                }
                Ustawienia.czas_symulacji = Ustawienia.czas;
            }

            //   System.out.println("out of for");
            Ustawienia.HIST = ind_h;

        }
    }
}
